apply plugin: 'com.android.application'
// apply plugin: 'com.jaredsburrows.license'  // Uncomment when generating license report
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: 'com.google.protobuf' // Needed for gRPC

import com.android.build.OutputFile

android {
    compileSdkVersion 35
    defaultConfig {
        applicationId "app.michaelwuensch.bitbanana"
        minSdkVersion 26
        targetSdkVersion 35
        versionCode 77
        versionName "0.9.9"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", "bitbanana-" + versionName)

        /* The following command will prevent any language from being packaged, that is not mentioned here.
         We want to keep all languages that we actually have translations for, so listed are basically the ones found in the strings folder.
         We have to do this for reproducibility reasons, as PlayStore changes a few language codes (e.g. for hebrew)
         */
        resConfigs "af", "ar", "ar-rSA", "bg", "bg-rBG", "ca", "cs", "cs-rCZ", "da", "da-rDK", "de", "de-rDE", "es", "fa", "es-rES", "fi", "fi-rFI", "fr", "fr-rFR", "it", "it-rIT", "ja", "ja-rJP", "ko", "my", "nb", "nb-rNO", "nl", "nl-rNL", "pl", "pl-rPL", "pt", "pt-rBR", "pt-rPT", "ro", "ro-rRO", "ru", "ru-rRU", "ta", "tr", "tr-rTR", "uk", "uk-rUA", "vi", "vi-rVN", "zh", "zh-rCN"
    }
    buildTypes {
        debug {
            // with the following line we can install release and debug version simultaneously
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "BitBanana Debug"
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            resValue "string", "app_name", "BitBanana"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    bundle {
        language {
            // Allows us to further provide multi language support at the expense of a bigger download size
            // All languages will be packed inside each apk.
            enableSplit = false
        }
    }

    // Disable dependency meta data. This is required for releasing on F-Droid.
    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        // Needed for Tor library to work when packaged inside .aab
        jniLibs.useLegacyPackaging = true
    }
    namespace 'app.michaelwuensch.bitbanana'
    lint {
        disable 'MissingTranslation', 'ExtraTranslation', 'MissingQuantity'
    }
    buildFeatures {
        buildConfig true
    }
}

// Suppress only the dep-ann warning for Java compilation in this module. This suppresses the missing deprecation annotation warnings for the generated code from lnd protos.
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ['-Xlint:-dep-ann']
}

/* Uncomment when generating license report
licenseReport {
    generateHtmlReport = false
    generateJsonReport = true
    copyHtmlReportToAssets = false
    copyJsonReportToAssets = false
}


// Copy the licenses file into the res dir if it exists
copy {
    from "$buildDir/reports/licenses/licenseReleaseReport.json"
    into "$projectDir/src/main/res/raw/"
    rename "licenseReleaseReport.json", "license_report.json"
}
 */

//  Needed for gRPC
sourceSets {
    main.java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/javalite"
}

//  Needed for gRPC
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }
    plugins {
        javalite { artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0" }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.73.0'
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
            task.plugins {
                grpc {
                    // This will generate the ServiceGrpc
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // QR-Code scanner:
    implementation("io.github.zxing-cpp:android:2.3.0")

    // CameraX Dependencies
    implementation("androidx.camera:camera-core:1.4.2")
    implementation("androidx.camera:camera-camera2:1.4.2")
    implementation("androidx.camera:camera-lifecycle:1.4.2")
    implementation("androidx.camera:camera-view:1.4.2")

    // QR-Code generator:
    implementation 'com.github.alexzhirkevich:custom-qr-generator:2.0.0-alpha01'

    // Library to restart app
    implementation 'com.jakewharton:process-phoenix:2.1.2'

    // HTTP library to perform API interaction
    implementation "com.squareup.okhttp3:okhttp:4.12.0"

    // Library for the avatar images
    implementation 'com.github.michaelWuensch:avathor-android-library:1.3.0'

    // Expandable floating action button menus
    implementation 'com.github.Agmcz:expandable-fab:v1.2.1-fork-rtl-fix-1.3'
    //implementation 'com.nambimobile.widgets:expandable-fab:1.2.1' // This was the original one that has problems with RTL languages

    // Tor implementation
    implementation("io.matthewnelson.kmp-tor:resource-exec-tor:408.16.4")
    implementation("io.matthewnelson.kmp-tor:runtime:2.4.0")
    implementation("io.matthewnelson.kmp-tor:runtime-service:2.4.0")

    // Nostr Wallet Connect (NWC) implementations
    implementation("org.rust-nostr:nostr-sdk:0.43.0")

    // gRPC implementation to communicate with lnd
    implementation 'io.grpc:grpc-okhttp:1.73.0'
    implementation 'io.grpc:grpc-protobuf-lite:1.73.0'
    implementation 'io.grpc:grpc-stub:1.73.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'com.google.code.gson:gson:2.9.0'
    compileOnly 'com.google.api.grpc:googleapis-common-protos:0.0.3'

    // For parsing lnd macaroons
    implementation 'com.github.nitram509:jmacaroons:0.5.0'

    // Implementation for some lightning basics like decoding a bolt 11 invoice
    implementation 'fr.acinq.lightning:lightning-kmp:1.7.2'

    // secp256k1 implementation (Used for LNURL Auth)
    implementation 'fr.acinq.secp256k1:secp256k1-kmp-jni-android:0.18.0'

    // Used for base encoding and URI escaping
    implementation 'com.google.guava:guava:29.0-android'

    // Asynchronous programming library
    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"

    // Math parser for the stealth mode calculator (we have to use the outdated version because of licensing reasons)
    implementation("org.mariuszgromada.math:MathParser.org-mXparser:4.4.2")

    // Library to react to software keyboard visibility changes
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:3.0.0-RC3'

    // Library for reading dns records. This allows us to interact with email like addresses for BitcoinPayments.
    implementation 'org.minidns:minidns-hla:1.0.5'


    // Basic Android libraries
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.security:security-crypto-ktx:1.1.0-beta01"
    implementation 'com.google.android.material:material:1.12.0'

    // Libraries for tests
    testImplementation 'org.json:json:20200518'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}